name: Auto Build and Release

on:
  push:
    branches:
      - main

jobs:
  # Job to build the executable for Linux
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      artifact-linux: ${{ steps.upload-linux.outputs.artifact }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build for Linux
        run: |
          pyinstaller --onefile src/passwgen.py
        env:
          PYTHONUNBUFFERED: "1"

      - name: Upload Linux Artifact
        id: upload-linux
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: dist/your_script

  # Job to build the executable for Windows
  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-windows: ${{ steps.upload-windows.outputs.artifact }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.7"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build for Windows
        run: |
          pyinstaller --onefile src\passwgen.py
        env:
          PYTHONUNBUFFERED: "1"

      - name: Upload Windows Artifact
        id: upload-windows
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: dist/your_script.exe

  # Job to determine the next version and tag the commit
  tag-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Determine Next Version
        id: versioning
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "autobuild.0")
          latest_version=${latest_tag#autobuild.}
          next_version=$((latest_version + 1))
          echo "next_version=autobuild.${next_version}" >> $GITHUB_ENV
          echo "::set-output name=next_version::autobuild.${next_version}"

      - name: Tag the Commit
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.versioning.outputs.next_version }}
          git push origin ${{ steps.versioning.outputs.next_version }}

  # Job to create a GitHub release
  create-release:
    runs-on: ubuntu-latest
    needs: [tag-release]
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: linux-build

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            passwgen
            passwgen.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.tag-release.outputs.next_version }}
          name: Release ${{ needs.tag-release.outputs.next_version }}
          body: |
            Automated release for ${{ needs.tag-release.outputs.next_version }}.
