name: Auto Build and Release

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force build/release even without Python changes?'
        type: boolean
        required: true
        default: true

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      python_changed: ${{ steps.set-outputs.outputs.python_changed }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Build Need
        id: set-outputs
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            # Always build if manually forced
            echo "python_changed=${{ inputs.force_build || 'true' }}" >> $GITHUB_OUTPUT
          else
            # Check for Python changes in push events
            git diff --name-only ${{ github.event.before }} ${{ github.event.after }} > changes.txt
            changed=$(grep -q '\.py$' changes.txt && echo 'true' || echo 'false')
            echo "python_changed=$changed" >> $GITHUB_OUTPUT
          fi

  build-linux:
    needs: check-changes
    if: needs.check-changes.outputs.python_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build CLI
        run: pyinstaller --onefile src/passwgen.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-cli
          path: dist/passwgen

  build-linux-ui:
    needs: check-changes
    if: needs.check-changes.outputs.python_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build UI
        run: pyinstaller --onefile src/ui.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-ui
          path: dist/ui

  build-windows:
    needs: check-changes
    if: needs.check-changes.outputs.python_changed == 'true'
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"
  
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
  
      - name: Build CLI (Directory Mode)
        run: pyinstaller src\passwgen.py
          
      - name: Package Output
        run: Compress-Archive -Path dist\passwgen -DestinationPath dist\passwgen.zip
          
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-cli
          path: dist/passwgen.zip
    
  build-windows-ui:
    needs: check-changes
    if: needs.check-changes.outputs.python_changed == 'true'
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12.7"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build UI
        run: pyinstaller --onefile src\ui.py

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-ui
          path: dist/ui.exe

  create-release:
    needs: [check-changes, build-linux, build-windows, build-linux-ui, build-windows-ui]
    if: needs.check-changes.outputs.python_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Determine Next Version
        id: versioning
        run: |
          git fetch --tags
          latest_tag=$(git tag -l "autobuild.*" | sort -V | tail -n 1 || echo "autobuild.0")
          latest_version=${latest_tag#autobuild.}
          next_version=$((latest_version + 1))
          echo "next_version=autobuild.${next_version}" >> $GITHUB_ENV
          echo "next_version=autobuild.${next_version}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.versioning.outputs.next_version }}
          name: "Release ${{ steps.versioning.outputs.next_version }}"
          body: |
            Automated release including:
            - CLI application (Windows/Linux)
            - UI application (Windows/Linux)
          files: |
            artifacts/linux-cli
            artifacts/windows-cli/passwgen.zip
            artifacts/linux-ui
            artifacts/windows-ui/ui.exe
          draft: false
          prerelease: false
